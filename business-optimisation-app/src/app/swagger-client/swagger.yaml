swagger: '2.0'
info:
  description: REST API for PMS
  version: 1.0.0
  title: PMS
paths:
  /facilities-management:
    get:
      tags:
        - facilities-management
      summary: returns enum with type of department
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TypeOfDepartmentDTO' 
              
  /facilities-management/workplaces:
    get:
      tags:
        - facilities-management
      summary: returns array of workplace
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkPlaceDTO'
              
    post:
      tags:
        - facilities-management
      summary: create a new workplace
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkPlaceDTO'
            
            
  /facilities-management/workplaces/{workplaceId}:
    get:
      tags:
        - facilities-management
      summary: return workplace by Id
      parameters:
        - name: workplaceId
          in: path
          description: Id of workplace that needs to be return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkPlaceDTO'
        '405':
          description: invalid input
          
    put:
      tags:
        - facilities-management
      summary: update workplace by Id
      parameters:
        - name: workplaceId
          in: path
          description: Id of workplace that needs to be update
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
          
    delete:
      tags:
        - facilities-management
      summary: delete workplace by Id
      parameters:
        - name: workplaceId
          in: path
          description: Id of workplace that needs to be delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
          
        
  /facilities-management/workareas:
    get:
      tags:
        - facilities-management
      summary: returns array of workarea
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/WorkAreaDTO'
              
    post:
      tags:
        - facilities-management
      summary: create a new workarea
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkAreaDTO'
            
            
  /facilities-management/workareas/{workareaId}:
    get:
      tags:
        - facilities-management
      summary: return workarea by Id
      parameters:
        - name: workareaId
          in: path
          description: Id of workarea that needs to be return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkAreaDTO'
        '405':
          description: invalid input
          
    put:
      tags:
        - facilities-management
      summary: update workarea by Id
      parameters:
        - name: workareaId
          in: path
          description: Id of workarea that needs to be update
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
          
    delete:
      tags:
        - facilities-management
      summary: delete workarea by Id
      parameters:
        - name: workareaId
          in: path
          description: Id of workarea that needs to be delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input  
          
  
  /facilities-management/departments:
    get:
      tags:
        - facilities-management 
      summary: returns array of department
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DepartmentDTO'
              
    post:
      tags:
        - facilities-management
      summary: create a new department
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DepartmentDTO'
            
            
  /facilities-management/departments/{departmentId}:
    get:
      tags:
        - facilities-management
      summary: return department by Id
      parameters:
        - name: departmentId
          in: path
          description: Id of department that needs to be return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DepartmentDTO'
        '405':
          description: invalid input
          
    put:
      tags:
        - facilities-management
      summary: update department by Id
      parameters:
        - name: departmentId
          in: path
          description: Id of department that needs to be update
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
          
    delete:
      tags:
        - facilities-management
      summary: delete department by Id
      parameters:
        - name: departmentId
          in: path
          description: Id of department that needs to be delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input  
          
  /facilities-management/locations:
    get:
      tags:
        - facilities-management 
      summary: returns array of location
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/LocationDTO'
              
    post:
      tags:
        - facilities-management
      summary: create a new location
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LocationDTO'
            
            
  /facilities-management/locations/{locationId}:
    get:
      tags:
        - facilities-management
      summary: return location by Id
      parameters:
        - name: locationId
          in: path
          description: Id of location that needs to be return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/LocationDTO'
        '405':
          description: invalid input
          
    put:
      tags:
        - facilities-management
      summary: update location by Id
      parameters:
        - name: locationId
          in: path
          description: Id of location that needs to be update
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input
          
    delete:
      tags:
        - facilities-management
      summary: delete location by Id
      parameters:
        - name: locationId
          in: path
          description: Id of location that needs to be delete
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '405':
          description: invalid input   
          
          
definitions:
  AddressDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      city:
        type: string
      street:
        type: string
      buildingNumber:
        type: integer
        format: int64
      floors:
        type: integer
        format: int32
  DepartmentDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      type:
        type: string
  FacilitiesManagementHistoryDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      type:
        type: string
      date:
        type: string
        format: date-time  
      user:
        type: object
      newInfo:
        type: object
      oldInfo:
        type: object
  LocationDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      address:
        $ref: '#/definitions/AddressDTO'
      comment:
        type: string
  TypeOfDepartmentDTO:
      type: string
      enum:
        - Office
        - Warehouse
        - PointOfSale
        - Sweatshop
  WorkAreaDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      department:
        $ref: '#/definitions/DepartmentDTO'
  WorkPlaceDTO:
    type: object
    properties:
      id:
        type: integer
        format: int64
      location:
        $ref: '#/definitions/LocationDTO'
      department:
        type: string
      floor:
        type: integer
        format: int32
      room:
        type: integer
        format: int32
      place:
        type: integer
        format: int32
      comment:
        type: string
